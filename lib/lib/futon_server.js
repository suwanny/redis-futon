// Generated by CoffeeScript 1.3.3
var FutonServer, MainController, express, querystring;

express = require('express');

querystring = require('querystring');

MainController = require('./main_controller');

FutonServer = (function() {

  function FutonServer(redis_port) {
    this.app = express();
    this.controller = new MainController(redis_port);
    this.configure(this.app);
  }

  FutonServer.prototype.configure = function(app) {
    var api, self, _fn, _i, _len, _ref;
    app.configure(function() {
      app.use(express.cookieParser());
      app.use(express.bodyParser());
      app.use(express.methodOverride());
      app.use(app.router);
      app.use(express["static"](__dirname + '/../../public'));
      app.use(express.errorHandler({
        dumpExceptions: true,
        showStack: true
      }));
    });
    self = this;
    _ref = this.controller.routes;
    _fn = function(api) {
      var fn_handler;
      fn_handler = function(req, res) {
        try {
          return self.controller[api.method](req, res);
        } catch (error) {
          return res.json(error);
        }
      };
      app[api.http_method](api.path, fn_handler);
      return logger.info("route: " + (api.http_method.toUpperCase()) + " " + api.path + " => " + api.method);
    };
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      api = _ref[_i];
      _fn(api);
    }
  };

  FutonServer.prototype.start = function(port) {
    if (port == null) {
      port = config.LISTEN_PORT;
    }
    this.app.listen(port);
    return logger.info("Server is listening to " + port);
  };

  return FutonServer;

})();

module.exports = FutonServer;
